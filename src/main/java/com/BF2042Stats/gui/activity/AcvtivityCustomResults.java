package com.BF2042Stats.gui.activity;

import com.BF2042Stats.data.ConfigData;
import com.BF2042Stats.gui.ActivityMain;
import com.BF2042Stats.gui.dataclass.WriteList;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;

public class AcvtivityCustomResults {
    private JPanel rootPanel;
    private JPanel layoutPanel;
    private JList<WriteList> list_data;
    private JTextField text_name;
    private JTextField text_message;
    private JButton btn_updata;
    private DefaultListModel<WriteList> model = new DefaultListModel<>();
    private Font font = ActivityMain.getInstance().getFont().deriveFont(12f);

    public AcvtivityCustomResults() {
        init();
        bind();
    }

    private void init() {
        if (ConfigData.getCustomResultsMap() != null) {
            for (String s : ConfigData.getCustomResultsMap().keySet()) {
                model.addElement(new WriteList(s, "玩家：" + s + "特制化结果：" + ConfigData.getCustomResultsMap().get(s)));
            }
            list_data.setModel(model);
            list_data.setFont(font);
        }
    }

    private void bind() {
        list_data.addListSelectionListener(listSelectionEvent -> {
            if (!listSelectionEvent.getValueIsAdjusting()) {
                int result = JOptionPane.showConfirmDialog(null, "你确定要删除这个特制化的数据吗？", "Confirmation", JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.YES_OPTION) {
                    int index = list_data.getSelectedIndex();
                    if (index != -1) {
                        ConfigData.removeCustomResultsMap(model.remove(index).getS1());
                        System.out.println("已删除一名玩家的特制化结果");
                    }
                } else if (result == JOptionPane.NO_OPTION) {
                    System.out.println("已取消");
                }
            }
        });
        btn_updata.addActionListener(actionEvent -> {
            String s1 = text_name.getText(), s2 = text_message.getText();
            if (s1.length() < 3) {
                JOptionPane.showMessageDialog(null, "这ID正确吗？", "ERROR", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            if (s2.length() < 1) {
                JOptionPane.showMessageDialog(null, "这鉴定正确吗？", "ERROR", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            if (ConfigData.getCustomResultsMap().containsKey(s1)) {
                JOptionPane.showMessageDialog(null, "该玩家已经存在", "ERROR", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            model.addElement(new WriteList(s1, "玩家：" + s1 + "特制化结果：" + s2));
            ConfigData.setCustomResultsMap(s1, s2);
            System.out.println("玩家：" + s1 + " 的特制化鉴定结果更改完毕");
        });
    }

//    public static void main(String[] args) {
//        JFrame jFrame = new JFrame("1");
//        jFrame.setSize(600, 600);
//        jFrame.setContentPane(new AcvtivityCustomResults().$$$getRootComponent$$$());
//        jFrame.setVisible(true);
//    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        layoutPanel = new JPanel();
        layoutPanel.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        rootPanel.add(layoutPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("特定鉴定结果");
        layoutPanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        list_data = new JList();
        layoutPanel.add(list_data, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        layoutPanel.add(panel1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        text_name = new JTextField();
        text_name.setText("");
        text_name.setToolTipText("");
        panel1.add(text_name, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        text_message = new JTextField();
        text_message.setText("");
        text_message.setToolTipText("");
        panel1.add(text_message, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        btn_updata = new JButton();
        btn_updata.setText("提交");
        panel1.add(btn_updata, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText(" 玩家ID");
        panel1.add(label2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText(" 结果");
        panel1.add(label3, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

}
